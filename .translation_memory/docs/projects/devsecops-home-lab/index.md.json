{
  "source_file_path_relative_to_docusaurus_root": "docs/projects/devsecops-home-lab/index.md",
  "source_file_content_hash": "9bae54dd9c4f9d0c1c38d769fc7348b10b1d060aa4665a697e38fcc095d1f438",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: devsecops-home-lab\ntitle: DevSecOps Home Lab\ndescription: Build a DevSecOps Home Lab based on what I have done.\nsidebar_position: 1\n---",
      "source_content_hash": "2b5b4ec6072dbfd5e666548f321c70e3cf7d81df92c53adf07b6aa71c3ca83d1",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Author: [Damien Burks]",
      "source_content_hash": "5ea0b7dea762d9db1deb5a12bbe8e41ef43190e41291691bb9f75859ac1ac1bf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "著者: [Damien Burks]"
      }
    },
    {
      "segment_id": "775b7fa4",
      "source_content": "<iframe\n  width=\"100%\"\n  height=\"500\"\n  src=\"https://www.youtube.com/embed/3612XpqUTfc?si=3612XpqUTfc\"\n  frameborder=\"0\"\n  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  allowfullscreen\n></iframe>",
      "source_content_hash": "2bed0b9a938b0e9c962b1632ed8f027d027092a4e0e98437d4c074dd4dc5cecd",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_775b7fa4"
      }
    },
    {
      "segment_id": "aee0e40d",
      "source_content": "## Overview",
      "source_content_hash": "7337f3d0aa29e9a82b8f1650b743a98eef90794631fa763a319686e69c546821",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 概要"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "So you decided that you want to go down the route of building your own home lab? Well, hell... welcome! This is the first project where I'm going to show you how to setup your own home lab from scratch! This will include you going in and setting up and configuring databases, installing packages, and a lot of things that System Administrators would do.",
      "source_content_hash": "011e87f28c72d10dd3e2cf28547a27a1bbea223d03d30b9536b26e36bfdaf997",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "自分でホームラボを構築したいとお考えですか？それなら、ようこそ！これは私がゼロからホームラボをセットアップする方法を初めて紹介するプロジェクトです。これには、データベースの設定やパッケージのインストール、システム管理者が行うような多くの作業が含まれます。"
      }
    },
    {
      "segment_id": "08ef5e40",
      "source_content": "> _According to [The Linux Handbook], a homelab is the name given to a server (or multiple server setup) that resides locally in your home and where you host several applications and virtualized systems for testing and developing or for home and functional usage._",
      "source_content_hash": "508cd5f66bf4bcc80e6baf2ef0b915afb2983fa23a2d8807a3506be445c61163",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "ja": "> _[The Linux Handbook]によると、ホームラボとは自宅に設置されたサーバー（または複数サーバー構成）のことで、テストや開発、家庭用および機能的な利用のために複数のアプリケーションや仮想化システムをホストするものです。_"
      }
    },
    {
      "segment_id": "f2c2bdd0",
      "source_content": "To be more formal (in a sense), we're going to build a comprehensive DevSecOps Home Lab that simulates a real-world environment for testing, learning, and enhancing your DevSecOps skills. This lab is designed to give you hands-on experience with a variety of tools and technologies commonly used in the DevSecOps ecosystem.",
      "source_content_hash": "697d347fdaa3fbe2019ce08ad46633ea8511b6474823bda01cb1e1fd9b51a354",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "より正式に言えば、私たちは現実世界の環境をシミュレートする包括的なDevSecOpsホームラボを構築します。このラボは、DevSecOpsスキルのテスト、学習、向上のために設計されており、DevSecOpsエコシステムで一般的に使用されるさまざまなツールや技術を実践的に学ぶことができます。"
      }
    },
    {
      "segment_id": "fa430ad4",
      "source_content": "## Don't have servers at home?",
      "source_content_hash": "10e516a0db53da431ffe00123e2fccba9d95a1bd546953144fd3eb7d5702b092",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 自宅にサーバーがない場合"
      }
    },
    {
      "segment_id": "4b1d2d7d",
      "source_content": "This is totally okay! There are two options that I'd recommend then:",
      "source_content_hash": "92f37db5d9ad01bcb29110253d4479567bfe89e17c5fc8c1b379df1863bd4055",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "全く問題ありません！その場合、私がお勧めする2つのオプションがあります："
      }
    },
    {
      "segment_id": "c6dea11f",
      "source_content": "1. Check out this video to learn how I went out to buy my systems for a very low price:\n2. If you have experience with building things out in the cloud, you can replicate this exact architecture, although it may be a little different when connecting to your machines and vice versa.\n3. Use tools like VirtualBox to create VM's locally. This comes with a bit of a learning curve.",
      "source_content_hash": "d683a152a4f5ebc7de24ec340004aed23a52c91d58dd8fab2d4de853bc5839b2",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "1. この動画をチェックして、非常に低価格でシステムを購入した方法を学んでください：\n2. クラウドで構築する経験がある場合は、このアーキテクチャをそのまま複製できますが、マシンへの接続やその逆の場合に若干異なる場合があります。\n3. VirtualBoxなどのツールを使用してローカルにVMを作成します。これには少し学習曲線が伴います。"
      }
    },
    {
      "segment_id": "f422383e",
      "source_content": "## Architecture Overview and Debrief",
      "source_content_hash": "d4ed98bc9b66818ab213c1fc0764eeb750e905ddb16cefc32057a6a7a233ae22",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## アーキテクチャ概要と説明"
      }
    },
    {
      "segment_id": "97ae4a01",
      "source_content": "My home lab consists of two servers running Ubuntu 24.04 LTS. To avoid any compatibility issues, you want to ensure that you are using this EXACT version.",
      "source_content_hash": "c94625b7d794da2dda3698411c21afc7c13465e8192fab9216326ecbd2a32145",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "私のホームラボは、Ubuntu 24.04 LTSを実行する2台のサーバーで構成されています。互換性の問題を避けるため、この正確なバージョンを使用することをお勧めします。"
      }
    },
    {
      "segment_id": "c3a738de",
      "source_content": "![Architecture Diagram](/img/projects/devsecops-home-lab/architecture.drawio.svg)",
      "source_content_hash": "726527ee89c3cc1bbc6f657fa5da03f450797503f400c5f42439c754cf2b0daf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "![アーキテクチャ図](/img/projects/devsecops-home-lab/architecture.drawio.svg)"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "The architecture is divided across two servers:",
      "source_content_hash": "996afcc5d6d4e2e510c572154730bf5cbb0ed22f8366de35d5a1f753da51dd57",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "アーキテクチャは2台のサーバーに分かれています："
      }
    },
    {
      "segment_id": "bdfae007",
      "source_content": "- `dsb-node-01`: This server is responsible for hosting essential infrastructure services, including a reverse proxy, containerization engine, and monitoring stack.\n- `dsb-hub`: Dedicated to handling the DevSecOps toolchain, this server focuses on source code management, security scanning, continuous integration, and continuous delivery (CI/CD).",
      "source_content_hash": "d1d85313ce958e33841c866fbee52e21daae5d1fa0833767297dc38211c1b1df",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- `dsb-node-01`: このサーバーは、リバースプロキシ、コンテナ化エンジン、監視スタックなど、重要なインフラストラクチャサービスをホストします。\n- `dsb-hub`: DevSecOpsツールチェーンを処理する専用サーバーで、ソースコード管理、セキュリティスキャン、継続的インテグレーション、継続的デリバリー（CI/CD）に焦点を当てています。"
      }
    },
    {
      "segment_id": "8bddee80",
      "source_content": "### Components Breakdown",
      "source_content_hash": "39b3476716b9362095814210c59414552832d76922ee1f63da9da6ed581fffb9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "### コンポーネントの詳細"
      }
    },
    {
      "segment_id": "c674e260",
      "source_content": "#### 1. **Server: dsb-node-01**",
      "source_content_hash": "83142f0d51e49fa47fd2dc686e30be88f77af2b7b2343af0c27c240949cd0922",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "#### 1. **サーバー: dsb-node-01**"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "This server lays the foundation for containerized environments and monitoring:",
      "source_content_hash": "fe0e9a757de37d05956538045aea3347e98ef6f444b8587bbb32547c87d91655",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このサーバーは、コンテナ化環境と監視の基盤を提供します："
      }
    },
    {
      "segment_id": "b4ef1e56",
      "source_content": "- **NGINX**: NGINX acts as a web server and reverse proxy, ensuring that incoming traffic is efficiently routed to the appropriate service.\n- **Docker**: Docker provides containerization capabilities, allowing applications and services to run in isolated environments.\n- **Containerized Web Application**: This could be anything (Python API, Java App, etc), as long as it is in a Docker container.\n- **Prometheus**: Prometheus is responsible for collecting and monitoring system and application metrics, serving as the central component for alerting and monitoring.\n- **Grafana**: Integrated with Prometheus, Grafana offers visual dashboards that make it easy to observe metrics and logs, giving you insights into system health and performance.",
      "source_content_hash": "7c1f58c71d9352fb8e27117445c157e3df1b6f7139992dfb77cf40cc50ce99a0",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- **NGINX**: NGINXはウェブサーバーおよびリバースプロキシとして機能し、着信トラフィックを適切なサービスに効率的にルーティングします。\n- **Docker**: Dockerはコンテナ化機能を提供し、アプリケーションやサービスを隔離された環境で実行できるようにします。\n- **コンテナ化されたウェブアプリケーション**: これは何でも構いません（Python API、Javaアプリなど）、Dockerコンテナ内にある限り。\n- **Prometheus**: Prometheusはシステムおよびアプリケーションのメトリクスを収集・監視し、アラートと監視の中心的なコンポーネントとして機能します。\n- **Grafana**: Prometheusと統合されたGrafanaは、メトリクスとログを視覚化するダッシュボードを提供し、システムの健全性とパフォーマンスを把握しやすくします。"
      }
    },
    {
      "segment_id": "1a316f80",
      "source_content": "#### 2. **Server: dsb-hub**",
      "source_content_hash": "f474d38267d10a642c1846feb28b742c61d890516b4f160067911884e91cbae0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "#### 2. **サーバー: dsb-hub**"
      }
    },
    {
      "segment_id": "40158b4b",
      "source_content": "This server hosts the critical components of the DevSecOps toolchain, enabling secure and automated workflows:",
      "source_content_hash": "88ea0babd5a67aba11bbac2a06e568e6a45a939f059a0e5bff1be9ed6bf0962d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このサーバーは、DevSecOpsツールチェーンの重要なコンポーネントをホストし、安全で自動化されたワークフローを可能にします："
      }
    },
    {
      "segment_id": "24c174ca",
      "source_content": "- **NGINX**: Similar to `dsb-node-01`, NGINX handles traffic management and routing for the services hosted on this server.\n- **Gitea**: A lightweight, self-hosted Git service, Gitea provides version control capabilities, allowing you to manage your source code repositories.\n- **SonarQube**: SonarQube is utilized for continuous code quality and security checks, detecting issues such as bugs, code smells, and vulnerabilities in the codebase.\n- **Jenkins**: As a cornerstone of CI/CD, Jenkins automates the process of building, testing, and deploying applications, ensuring a streamlined development pipeline.\n- **Trivy**: Trivy performs vulnerability scanning for Docker images, ensuring that containerized applications are free from known security risks.\n- **Nexus**: Nexus is used for managing dependencies, artifacts, and binaries. It serves as a repository manager that integrates with Jenkins, allowing you to maintain control over project artifacts and their versions.\n- **Docker**: Docker on this server continues to play a key role in containerizing applications and services, maintaining the consistency of deployment across the environment.",
      "source_content_hash": "ccdcf1d602dd5b726981688c7695a6ab9c1fdede58aab0b5d61e9d592ce35af6",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- **NGINX**: `dsb-node-01`と同様に、NGINXはこのサーバーでホストされるサービスのトラフィック管理とルーティングを担当します。\n- **Gitea**: 軽量でセルフホスト型のGitサービスであるGiteaは、ソースコードリポジトリを管理するためのバージョン管理機能を提供します。\n- **SonarQube**: SonarQubeは、コードベースのバグ、コードスメル、脆弱性などの問題を検出するための継続的なコード品質およびセキュリティチェックに使用されます。\n- **Jenkins**: CI/CDの中核として、Jenkinsはアプリケーションのビルド、テスト、デプロイのプロセスを自動化し、効率的な開発パイプラインを確保します。\n- **Trivy**: TrivyはDockerイメージの脆弱性スキャンを実行し、コンテナ化されたアプリケーションが既知のセキュリティリスクから解放されていることを確認します。\n- **Nexus**: Nexusは依存関係、アーティファクト、バイナリの管理に使用されます。Jenkinsと統合されたリポジトリマネージャーとして機能し、プロジェクトアーティファクトとそのバージョンを管理するための制御を維持します。\n- **Docker**: このサーバー上のDockerは、アプリケーションとサービスのコンテナ化において引き続き重要な役割を果たし、環境全体でのデプロイメントの一貫性を維持します。"
      }
    },
    {
      "segment_id": "ee8401db",
      "source_content": "## What You'll Learn",
      "source_content_hash": "616528bfaf9bc6f89f3ae39ed28ab8243c39e89a7a760ada19fba0db47c12a83",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "ja": "## 学べること"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "By completing this project fully, you will gain hands-on experience (practical) on setting up a DevSecOps environment, such as:",
      "source_content_hash": "4e61761f280fb1589836fe441662288518b05b8f0d8227c7c3fe29cbcd8d6896",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "ja": "このプロジェクトを完全に完了することで、以下のようなDevSecOps環境のセットアップに関する実践的な経験を得られます："
      }
    },
    {
      "segment_id": "c7436e69",
      "source_content": "- Containerization: Deploying and managing applications in Docker containers.\n- Monitoring and Logging: Using Prometheus to monitor application health and performance.\n- Security Scanning: Implementing security tools like Trivy and SonarQube to identify vulnerabilities and maintain code quality.\n- Web Traffic Management: Configuring Nginx as a reverse proxy to efficiently route and secure web traffic.",
      "source_content_hash": "9d41cf0d144e92c1321e1730ec47c584b7937080ddaa993063c61aceb21f0aa9",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "ja": "- コンテナ化: Dockerコンテナ内でのアプリケーションのデプロイと管理。\n- 監視とロギング: Prometheusを使用したアプリケーションの健全性とパフォーマンスの監視。\n- セキュリティスキャン: TrivyやSonarQubeなどのセキュリティツールを実装して脆弱性を特定し、コード品質を維持。\n- Webトラフィック管理: Nginxをリバースプロキシとして設定し、Webトラフィックを効率的にルーティングおよび保護。"
      }
    },
    {
      "segment_id": "068f27ab",
      "source_content": "<!-- Links -->",
      "source_content_hash": "25f54153c0d0e0dac3bb699044aa9b88a8a71752b65c898e921cc72c327d285a",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "ja": "@@untranslatable_placeholder_068f27ab"
      }
    },
    {
      "segment_id": "e7473ffd",
      "source_content": "[Damien Burks]: https://www.youtube.com/@damienjburks",
      "source_content_hash": "7097815c6ac6c02cff2091f30ccf75b895bb53b20eda52fea9f0f673e9d0ed23",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "ja": "[Damien Burks]: https://www.youtube.com/@damienjburks"
      }
    },
    {
      "segment_id": "f3bf480a",
      "source_content": "[The Linux Handbook]: https://linuxhandbook.com/homelab/",
      "source_content_hash": "cb90a31ad0d243f09ed17bbae61c7d3214cf75eb86479b777373f0b9d3a90dad",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "ja": "[The Linux Handbook]: https://linuxhandbook.com/homelab/"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/current/projects/devsecops-home-lab/index.md",
  "last_updated_timestamp": "2025-06-06T10:44:33.149322+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "ja": "9bae54dd9c4f9d0c1c38d769fc7348b10b1d060aa4665a697e38fcc095d1f438"
  }
}